import os 
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from pyrogram.errors import UserNotParticipant, UserBannedInChannel
import random


HB = Client(
    "Echo-bot", 
    api_id = 2152187,
    api_hash = "1a0208e94456f4799a5f5269f1198d62",
    bot_token = "5313152157:AAEd9AqIAavwJme5bRwXfFSO4f0id7naO5o"
    
)     
Username = "THOR_online"



START_TEXT = """HI {}, 
I CAN PROVIDE MOVIES 
MADE BY @TELSABOTS
"""
HELP_TEXT = """
JIUST SENT ANY MOVIE NAME 
โDONT SENT YEAR 
โ DONT SENT LANGAUGES 
โONLY SENT MOVIE NAME 
eg:- KGF2 

MADE BY @TELSABOTS
"""
ABOUT_TEXT = """
 ๐ค<b>BOT:DISCUSS UNPIN๐ค</b>
 
๐ข<b>CHANNEL :</b> โค๏ธ <a href='https://t.me/telsabots'>TELSA BOTSโค๏ธ</a>

๐ง๐ผโ๐ปDEV๐ง๐ผโ๐ป: @ALLUADDICT

 
๐คฉ<b>SOURCE :</b> ๐คฉ <a href='https://hbamal.blogspot.com/2021/08/how-to-make-your-own-discussion-unpin_4.html'>CLICK HEREโค๏ธ</a>

"""
feedback_text ="""**๐DUDE YOU CAN REQUEST \n MOVIE THROUGH HERE \n\n๐JUST SENT MOVIE NAME\n\neg:-/feedback kgf2**"""
SOURCE_TEXT = """</b>PRESS SOURCE BUTTON FOR SOURCE 
AND WATCH TOTOURIAL VIDEO IF YOU WANT ANY HELP</b>"""

START_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('๐คฉSOURCE๐คฉ', url='https://hbamal.blogspot.com/2021/08/how-to-make-your-own-discussion-unpin_4.html'),
        InlineKeyboardButton('๐TOTOURIAL๐', url='https://www.youtube.com/watch?v=sXTg5CB9dy8')
        ],[
        InlineKeyboardButton('๐HELP๐', callback_data='help'),
        InlineKeyboardButton('๐คABOUT๐ค', callback_data='about'),
        InlineKeyboardButton('๐CLOSE๐', callback_data='close')
        ]]
    )
HELP_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('๐ขCHANNEL๐ข', url='https://telegram.me/TELSABOTS'),
        InlineKeyboardButton('๐ง๐ผโ๐ปDEV๐ง๐ผโ๐ป', url='https://telegram.me/alluaddict')
        ],[
        InlineKeyboardButton('๐กHOME๐ก', callback_data='home'),
        InlineKeyboardButton('๐คABOUT๐ค', callback_data='about'),
        InlineKeyboardButton('๐CLOSE๐', callback_data='close')
        ]]
    )
ABOUT_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('๐ขCHANNEL๐ข', url='https://telegram.me/TELSABOTS'),
        InlineKeyboardButton('๐คฉSOURCE๐คฉ', url='https://youtu.be/sXTg5CB9dy8')
        ],[
        InlineKeyboardButton('๐กHOME๐ก', callback_data='home'),
        InlineKeyboardButton('๐HELP๐', callback_data='help'),
        InlineKeyboardButton('๐CLOSE๐', callback_data='close')
        ]]
    )
FEEDBACK_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('๐กFEEDBACK๐ก', callback_data='feedback'),
        InlineKeyboardButton('๐CLOSE๐', callback_data='close')
        ]]
    )
close_buttons = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('๐CLOSE๐', callback_data='close')
        ]]
    )




@HB.on_callback_query()
async def cb_data(bot, update):
    if update.data == "home":
        await update.message.edit_text(
            text=START_TEXT.format(update.from_user.mention),
            disable_web_page_preview=True,
            reply_markup=START_BUTTONS
        )
    elif update.data == "help":
        await update.message.edit_text(
            text=HELP_TEXT,
            disable_web_page_preview=True,
            reply_markup=HELP_BUTTONS
        )
    elif update.data == "about":
        await update.message.edit_text(
            text=ABOUT_TEXT,
            disable_web_page_preview=True,
            reply_markup=ABOUT_BUTTONS
        )
    elif update.data == "feedback":
        await update.message.edit_text(
            text=feedback_text,
            disable_web_page_preview=True,
            reply_markup =close_buttons
        )
    else:
        await update.message.delete()

 
@HB.on_message(filters.command(["start"]))
async def start(bot, update):
    text = START_TEXT.format(update.from_user.mention)
    reply_markup = START_BUTTONS
    await update.reply_text(
        text=text,
        disable_web_page_preview=True,
        reply_markup=reply_markup
    )
    
@HB.on_message(filters.command(["help"]))
async def help_message(bot, update):
    text = HELP_TEXT
    reply_markup = HELP_BUTTONS
    await update.reply_text(
        text=text,
        disable_web_page_preview=True,
        reply_markup=reply_markup
    )     
    
@HB.on_message(filters.command(["about"]))
async def about_message(bot, update):
    text = ABOUT_TEXT
    reply_markup = ABOUT_BUTTONS
    await update.reply_text(
        text=text,
        disable_web_page_preview=True,
        reply_markup=reply_markup
    )     
GROUP = "filimsmovie"
WELCONE_MSG = "<b>HELLO {},\n\n WELCOME TO HB GROUP\n JOIN OUR CHANNELS</b>"

WELCOME_MESSAGE_BUTTONS = [
    [
        InlineKeyboardButton('๐ขCHANNEL๐ข', url="https://t.me/+UZzc1ZqHvYXaLeNf"),
        InlineKeyboardButton('๐ขNEW MOVIES๐ข', url="https://t.me/+b31QfnWFdmcwYzVl")
        ],[
            InlineKeyboardButton('๐งโ๐ปDEV๐งโ๐ป', url="https://t.me/alluaddict"),
            InlineKeyboardButton('๐CLOSE ๐', callback_data='close')
        ]
]

@HB.on_message(filters.chat(GROUP) & filters.new_chat_members)
def welcomebot(client, update):
    text=WELCONE_MSG.format(update.from_user.mention)
    reply_markup = InlineKeyboardMarkup(WELCOME_MESSAGE_BUTTONS)
    update.reply(
        text=text,
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

RUN_STRINGS = (
    "เด.. เดงเดฟเดเตเดเดพเดฐเด... เดชเดดเตเดชเตเดฒเต เดคเดจเตเดจเต....เดเดฐเต เดฎเดพเดฑเตเดฑเตเดฎเดฟเดฒเตเดฒ.....เดเตเดฎเตเดฎเดพเดคเดฒเตเดฒ เดเดคเดฟ เดชเดฟเดเดฟเดเตเดเดพเดคเตเดคเดคเต....!!!",
    "เดเดณเตเดณเดพ... เดชเดฟเดณเตเดณเตเดฐเตเดเต เดเดฐเต... เดชเตเดทเดจเต...",
    "เดเดจเดฟเดเตเดเต เดเดดเตเดคเดพเตป เดเดฒเตเดฒเต เดเดฑเดฟเดฏเต เดธเดพเดฑเต.... เดตเดพเดฏเดฟเดเตเดเดพเตป เดเดฑเดฟเดฏเดฟเดฒเตเดฒเดฒเตเดฒเต....",
    "เดเดจเตเดจเต เดเดจเดฟ เดจเต เดฎเดฟเดฃเตเดเดฐเตเดคเต... เดเดจเตเดจเดคเตเดคเต เดเตเดเตเด เดเดดเดฟเดเตเดเต.....",
    "เดเดพเดฐเดฎเดพเดฃเตเดจเตเดจเต เดเดฐเตเดคเดฟ เดเตเดเดฏเดพเตป เดจเดฟเตฝเดเตเดเดฃเตเด เดเดจเตฝ เดเตเดเตเดเดฟเดเตเดเดฟเดฒเตเดฒเตเดเตเดเดฟเตฝ เดชเตเดณเตเดณเตเด.",
    "เดเดฑเตเดฑ เดเตเดตเดฟเดคเดฎเต เดเดณเตเดณเต เดฎเดจเดธเดฟเดฒเดพเดเตเดเดฟเดเตเดเต, เดธเตเดตเตผเดเตเดเดฎเดฟเดฒเตเดฒ เดจเดฐเดเดฎเดฟเดฒเตเดฒ, 'เดเดฑเตเดฑ เดเตเดตเดฟเดคเด', เดเดคเต เดเดตเดฟเดเต เดเดเตเดเดจเต เดตเตเดฃเดฎเตเดจเตเดจเต เดเดตเดจเดตเตป เดคเตเดฐเตเดฎเดพเดจเดฟเดเตเดเตเด",
    "เดตเดพเดเตเดเต เด เดฌเตเดเดฌเตเดธเตเดฑเตเดฑเดฟเดเต เดเดเตเดธเตเดชเตเดฒเตเดทเตป! เดธเดเต เด เดเตเดฑเดฟเดซเดฟเดเต เดกเดฟเดธเตเดเตเดฒเตเดธเต!!",
    "เดเต เดเดตเต เดธเตเดเตเดชเตเดชเดฟเดกเต เดเตป เดฆเดฟ เดนเตเดธเต เดเดซเต เดฎเต เดตเตเดซเตโ เดเตปเดกเต เดกเตเดเตเดเตผ เดฏเตเดตเดฟเตฝ เดจเตเดเตเดเต เดธเดฟ เดเดจเดฟ เดฎเดฟเดจเดฟเดฑเตเดฑเต เดเดซเต เดฆเดฟ เดเตเดกเต... เดเดฑเดเตเดเดฟ เดชเตเดเดพ..",
    "เด เดเดพเตป เดกเต เดฆเดพเดฑเตเดฑเตโ เดกเต เดเดพเตป เด เดฆเดพเดฑเตเดฑเตโ",
    "เดเตเดฐเตเด เดฌเดฟเดธเตเดเดฑเตเดฑเดฟเตฝ เดเตเดฐเตเด เดเดฃเตเดเดจเตเดจเต เดเดฐเตเดคเดฟ เดเตเดเตผ เดฌเดฟเดธเตเดเดฑเตเดฑเดฟเตฝ เดเตเดเตผ เดเดฃเตเดเดพเดเดฃเดฎเตเดจเตเดจเดฟเดฒเตเดฒ. เดชเดฃเดฟ เดชเดพเดณเตเด เดฎเตเดจเต...",
    "เดชเด เดชเตเดเดฟเดเตเดเต เดชเดจเตเดคเดณเดคเตเดคเต เดเตเดจเตเดจเดชเตเดชเต เดชเดจเตเดคเตเด เดเตเดคเตเดคเดฟ เดชเด เดชเดจเตเดคเดณเดคเตเดคเตเดเตเดเตเดจเตเดจเต เดชเดฑเดเตเด เดชเตเดฒเต เดเดฏเดฒเตเดฒเต.",
    "เดเดจเตเดฑ เดเตผเดคเตเดคเดพเดตเต.... เดเดจเตเดจเต เดจเต เดจเดฒเตเดฒเดตเดจเดพเดเดพเตป เดธเดฎเตเดฎเดคเดฟเดเตเดเตเดฒเตเดฒ เดเดฒเตเดฒเต.",
    "เดเดพเตผ เดเตปเดเดฟเตป เดเดเตเดเต เดเดเดชเตเดฒเตเดฑเตเดฑเตโเดฒเดฟ......",
    "เดคเดณเตเดณเต เดเดฒเดฟเดชเตเดชเต เดคเตเดฐเดฃเดฟเดฒเตเดฒเดฒเตเดฒเต!!",
    "เดชเดพเดคเดฟเดฐเดพเดคเตเดฐเดฟเดเตเดเต เดจเดฟเดจเตเดฑเต เดเดเตเดเตป เดเดฃเตเดเดพเดเตเดเดฟ เดตเตเดเตเดเดฟเดฐเดฟเดเตเดเตเดจเตเดจเต เดชเตเดฑเตเดเตเดเดฏเตเด เดเดฟเดเตเดเดจเตเด....",
    "เด เดชเดฟเดจเตเดจเต เดจเต เดเดเตเดเต เดชเตเดฐเตเดฎเดฟเดเตเดเตเดฎเตเดชเตเตพ เดเดคเต เดชเตเดฐเดฃเดฏเด.... เดจเดฎเตเดฎเตพ เดเดเตเดเต เดชเตเดฐเตเดฎเดฟเดเตเดเตเดฎเตเดชเตเตพ เดเดคเต เดเดฎเตเดชเดฟ....",
    "เดฆเตเดตเดฎเต เดเดจเตเดจเต เดฎเดพเดคเตเดฐเด เดฐเดเตเดทเดฟเดเตเดเดฃเต....",
    "เดเดตเดณเต เดเตผเดคเตเดคเต เดเตเดเดฟเดเตเด เดเดณเตเดณเตเด เดจเดจเดเตเด เดฎเดดเดฏเตเด เดตเตเดธเตเดฑเตเดฑเต....",
    "เดเดคเตเดฐเตเด เดเดพเดฒเด เดเดตเดฟเดเต เดเดฏเดฟเดฐเตเดจเตเดจเต....!",
    "เดเตปเดเตเดฒเตเดทเต เดคเตเดฐเต เดชเดฟเดเดฟ เดเดฒเตเดฒ เดเดฒเตเดฒเต....",
    "เดเตพ เดฆเดฟ เดกเตเดฐเตเดเดธเตโ เดฒเตเดเตโ เดเตเดตเดฟเดเตเดเดฟเตฝ เดธเตเดฑเตเดฑเดพเตผเดธเต...",
    "เดเดจเตเดฑเต เดชเตเดฐเดพเดจเตเดคเตป เดฎเตเดคเตเดคเดชเตเดชเดพ เดเดตเดจเต เดเดฐเต เดตเดดเดฟเดฏเดพเดเตเดเดฟ เดคเดฐเดฃเต",
    "เดชเตเดเตเดเดณเต เดเตเดเตเดเดฟเดฏ เดธเตเดคเตเดฐเตเดงเดจ เดคเตเด เดคเดฐเตเดฎเต เดเดณเดฟเดฏเดพ",
    "เดจเต เดตเดฒเตเดฒเดพเดคเต เดเตเดทเตเดฃเดฟเดเตเดเต เดชเตเดฏเดฟ",
    "เดเดฃเตเดฃเดฟเดฒเตเดฃเตเดฃเดฏเตเดดเดฟเดเตเดเต เดเดพเดคเตเดคเดฟเดฐเดฟเดเตเดเตเดตเดพเดฏเดฟเดฐเตเดจเตเดจเดณเดฟเดฏเดพ.",
    "เดเตเดฒเตเดฒเดพเดเตเดเดฃเตเดเต เดเดจเตเดจเดฟเดเตเดเต เดชเตเดเดพ เดคเดเดฟ.เดฏเดพ .\
    เดทเดเตเดเต เดเด เดฏเตเดตเตผ เดฎเตเดคเต เดฌเตเดฒเดกเดฟ gramavasis.",
    "เดชเตเดฏเดฟ เดเดพเดตเด .\
    เดจเดฟเดจเตเดจเต เดเตเดฃเตเดเต เดเดพเดตเดพเตป patto.",
    "เดจเดฟเดจเตเดจเต เดเตเดฃเตเดเต เดจเดพเดเตเดเตเดเดพเตผเดเตเดเตเด เดเตเดฃเตเดฒเตเดฒเตเดฏ เดตเดฟเดเตเดเตเดเดพเตผเดเตเดเตเด เดเตเดฃเตเดฒเตเดฒเตเดฏ เดเดจเตเดคเดฟเดจเดพ เดเดเตเดเดจเต เดจเดพเดฃเด เดเตเดเตเดเต เดเตเดตเดฟเดเตเดเตเดจเตเดจเด เดชเดพเดเต เดตเดพเดดเต เดเตเดเตเดเดคเดณเดฟ เดตเดพเดด .", 
)


@HBient.on_message(
    filters.command("runs")
async def runs(_, message):
    """ /runs strings """
    effective_string = random.choice(RUN_STRINGS)
    if message.reply_to_message:
        await message.reply_to_message.reply_text(effective_string)
    else:
        await message.reply_text(effective_string)

print("hb")
HB.run()




